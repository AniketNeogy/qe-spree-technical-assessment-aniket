name: Playwright Tests
on:
  push:
    branches-ignore: [main, gh-pages]
  pull_request:
    branches: [main]

# Set concurrency to ensure only one workflow runs at a time per branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Playwright Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Split tests by test class files
        shard: [1, 2, 3, 4, 5]
        total-shards: [5]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'playwright-test/package-lock.json'
      
      - name: Install dependencies
        run: |
          cd playwright-test
          npm ci
      
      - name: Install Playwright browsers
        run: |
          cd playwright-test
          npx playwright install --with-deps
      
      - name: Run Playwright tests
        run: |
          cd playwright-test
          npx playwright test --shard=${{ matrix.shard }}/${{ matrix.total-shards }}
        env:
          CI: true
          TEST_WORKER_INDEX: ${{ matrix.shard }}
      
      - name: Upload HTML report for this shard
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report-${{ matrix.shard }}
          path: playwright-test/playwright-report/
          retention-days: 30
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-results-${{ matrix.shard }}
          path: playwright-test/test-results/
          retention-days: 30

  merge_reports:
    name: Merge Test Reports
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          cd playwright-test
          npm ci
      
      - name: Install Playwright
        run: |
          cd playwright-test
          npx playwright install
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: all-artifacts
      
      - name: Merge reports
        run: |
          npx playwright merge-reports --reporter html ./all-artifacts/playwright-results-*
          
      - name: Upload merged report
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report-merged
          path: playwright-report
          retention-days: 30

  publish_report:
    name: Publish HTML Report
    # Run if tests pass or fail, but not if cancelled
    if: "success() || needs.merge_reports.result == 'failure'"
    needs: [merge_reports]
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      # Unique URL path for each workflow run attempt
      HTML_REPORT_URL_PATH: reports/${{ github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}
    steps:
      - name: Checkout GitHub Pages Branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          # Create gh-pages branch if it doesn't exist
          if-not-exists: true
      
      - name: Set Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
      - name: Create empty commit if gh-pages is empty
        run: |
          if [ -z "$(ls -A | grep -v '.git')" ]; then
            git commit --allow-empty -m "Initial commit for GitHub Pages"
            git push origin gh-pages
          fi
      
      - name: Download merged HTML report
        uses: actions/download-artifact@v3
        with:
          name: playwright-report-merged
          path: ${{ env.HTML_REPORT_URL_PATH }}
      
      - name: Push HTML Report
        timeout-minutes: 3
        run: |
          git add .
          git commit -m "workflow: add HTML report for run-id ${{ github.run_id }} (attempt: ${{ github.run_attempt }})"
          
          while true; do
            git pull --rebase
            if [ $? -ne 0 ]; then
              echo "Failed to rebase. Please review manually."
              exit 1
            fi
            
            git push
            if [ $? -eq 0 ]; then
              echo "Successfully pushed HTML report to repo."
              exit 0
            fi
          done
      
      - name: Output Report URL as Workflow Annotation
        run: |
          FULL_HTML_REPORT_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/$HTML_REPORT_URL_PATH
          
          echo "::notice title=ðŸ“‹ Published Playwright Test Report::$FULL_HTML_REPORT_URL"

# This workflow will be triggered when a branch is deleted to clean up the reports
---
name: Delete Branch Reports

on:
  delete:
    branches-ignore: [main, gh-pages]

# Ensures that currently running Playwright workflow of deleted branch gets cancelled
concurrency:
  group: ${{ github.event.ref }}
  cancel-in-progress: true

jobs:
  delete_reports:
    name: Delete Reports
    runs-on: ubuntu-latest
    env:
      # Contains all reports for deleted branch
      BRANCH_REPORTS_DIR: reports/${{ github.event.ref }}
    steps:
      - name: Checkout GitHub Pages Branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      
      - name: Set Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
      - name: Check for workflow reports
        run: |
          if [ ! -d "$BRANCH_REPORTS_DIR" ] || [ -z "$(ls -A $BRANCH_REPORTS_DIR 2>/dev/null)" ]; then
            echo "BRANCH_REPORTS_EXIST=false" >> $GITHUB_ENV
          else
            echo "BRANCH_REPORTS_EXIST=true" >> $GITHUB_ENV
          fi
      
      - name: Delete reports from repo for branch
        if: ${{ env.BRANCH_REPORTS_EXIST == 'true' }}
        timeout-minutes: 3
        run: |
          cd $BRANCH_REPORTS_DIR/..
          
          rm -rf ${{ github.event.ref }}
          git add .
          git commit -m "workflow: remove all reports for branch ${{ github.event.ref }}"
          
          while true; do
            git pull --rebase
            if [ $? -ne 0 ]; then
              echo "Failed to rebase. Please review manually."
              exit 1
            fi
            
            git push
            if [ $? -eq 0 ]; then
              echo "Successfully removed HTML reports from repo."
              exit 0
            fi
          done 